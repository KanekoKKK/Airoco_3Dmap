/* TODO: 色指定#111と#FFFを一つの変数にまとめる */
/* TODO: レスポンスデザイン対応（今だとbootstrapつかえてないかも） */
/* TODO: reloadボタンが小さくて目立たないので修正する */

/* 横並び表示のための幅設定 */
:root{
  --side: 480px;     /* 右パネル幅だけここで調整 */
  --main-min: 320px; /* 左カラムがこれ以下にならない */
}

/* ==== 全体共通 ==== */
html,body{height:100%;}
body{
  font-family:'Share Tech Mono',monospace;  /* フォント変更 */
  background:#111;color:#fff;
  margin:0;display:flex;flex-direction:column;
}
/* リセット & 共通部分 */
* { box-sizing: border-box; margin: 0; padding: 0; }
.card      { background: #111; border: 2px solid #fff; padding: 1rem; }

/* ヘッダ  */
#topBar    { display: flex; justify-content: space-between; align-items: center;
             padding: .5rem 1rem; background: #111; border-bottom: 2px solid #fff; }
#topBar h1 { font-size: 1.6rem; }
#reloadBtn { background: #111; border: 2px solid #111; color: #fff;
             padding: .4rem 1rem; cursor: pointer; 
            font-family:'Share Tech Mono',monospace;
            font-size: 30px; }

/* 更新時刻 */
#lastUpdate { padding: .4rem 1rem; font-size: .9rem; background: #111; }
#isFetchSuccess { padding: .4rem 1rem; font-size: .9rem; background: #111; }

#roomInfo{
  align-self: start;   /* ← 高さ 100% をやめて“上寄せ” */
  max-height: 600px;   /* 好きな数値に調整。なくても OK */
}

/* ==== レイアウト（3D + 右パネル） ==== */
#layout{
  flex:1;
  display:grid;
  /* ↓3Dデータ表示、詳細表示、使い方などを横並びに */
  /* サイズ固定方法を変えた方がいいかもしれない（今3Dモデル表示部分以外のサイズを固定） */
  /* 縦長ウィンドウ（横長でも）表示がキモい ノートPC用の画面幅にしか合ってない*/
  grid-template-columns: minmax(var(--main-min),1fr)  var(--side); 
  gap:1rem;
  padding:1rem;
  overflow:hidden;
}

/* 凡例 */
#legend {
  text-align: center;
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 0.5rem;
  font-size: 0.9rem;
  border-top: 1px solid #fff;
}

/* グラデーションバー */
#colorGradient {
  width: 150px;
  height: 16px;
  background: linear-gradient(to right, 
    #00FF00,   
    #44FF00,
    #88FF00,
    #AAFF00,
    #DDFF00,
    #FFFF00,
    #FFDD00,
    #FFBB00,
    #FF9900,
    #FF7700,
    #FF4400    
  );
  border: none;
  
}

/* 3D ビュー側 */
#viewerWrapper{
  position:relative;
  display:flex;flex-direction:column;
  width:100%;height:100%;
  border:2px solid #fff;
}
#myCanvas{              /* グリッドに合わせて常に全域を占有させる */
  flex:1 1 auto;
  width:100%;height:100%;
  display:block;
}

/* 右パネル（縦スクロール可） <- やめたほうがいいかも*/
#sidePanel{
  display:flex;flex-direction:column;gap:1rem;
  overflow-y:auto;     /* 画面が狭い時はここだけ縦スクロール */
}
#footerInfo{margin-top:auto;font-size:.8rem;text-align:center;opacity:.6;}

/* 使い方タイトル */
.usageTitle {
  text-align: center;
  margin-bottom: 0.5rem;
  font-size: 1.2rem;
  font-weight: bold;
}

/* 使い方文章部分 */
.usageList p {
  margin: 0.4rem 0;
  text-indent: 0;
  padding-left: 0;
}

#buttonContainer {
  display: flex;
  justify-content: center;  /* または space-between, space-around など */
  gap: 16px;                /* ボタンの間の余白 */
  margin-top: 16px;         /* Three.jsとの間の余白 */
}

#buttonContainer button {
  padding: 10px 20px;
  background-color: #111;
  color: white;
  border: 1px solid #FFF;
  
  font-family: 'Share Tech Mono', monospace;
  cursor: pointer;
  transition: background-color 0.2s ease;
}

#buttonContainer button:hover {
  background-color: #111;
}


/* レスポンシブ—モバイルでは 1 カラム */
@media(max-width:768px){
  #layout{grid-template-columns:1fr;}
}

/* フッター（パネル最下部に張り付け） */
#footerInfo { margin-top: auto; font-size: .8rem; text-align: center;
              opacity: .6; }
